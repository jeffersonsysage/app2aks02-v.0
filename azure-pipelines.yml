# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '81d4fa4d-65d4-45e1-861f-6a69b442e2db'
  # imageRepository: 'appaksv'
  frontend-imageRepository: 'frontend'
  backend-imageRepository: 'backend'
  frontend-dockerfilePath: '**/frontend/Dockerfile'
  backend-dockerfilePath: '**/backend/Dockerfile'
  containerRegistry: 'akslabacr1211.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'akslabacr1211e869-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build frontend and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(frontend-imageRepository)
        dockerfile: $(frontend-dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build backend and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(backend-imageRepository)
        dockerfile: $(backend-dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - publish: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'app2aks02v0.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/frontend-deployment.yaml
                $(Pipeline.Workspace)/manifests/backend-deployment.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(frontend-imageRepository):$(tag)
                $(containerRegistry)/$(backend-imageRepository):$(tag)
          

          # # Step 3: 安裝 Ingress Controller
          # - task: HelmInstaller@1
          #   displayName: "Install Helm"
          #   inputs:
          #     helmVersion: "latest"

          # - script: |
          #     helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          #     helm repo update
          #     helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
          #       --namespace ingress-nginx --create-namespace
          #   displayName: "Install NGINX Ingress Controller"
            
          # - task: AzureCLI@2
          #   inputs:
          #     azureSubscription: 'Azure subscription 1(cdb3c53c-748d-4257-acea-4755d79164da)'
          #     scriptType: 'bash'
          #     scriptLocation: 'inlineScript'
          #     inlineScript: |
          #       az aks get-credentials --resource-group akslab1122 --name akslabcluster1211
          #       export KUBECONFIG=$HOME/.kube/config
          #       helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          #       helm repo update
          #       helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure subscription 1(cdb3c53c-748d-4257-acea-4755d79164da)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az aks get-credentials --resource-group akslab1122 --name akslabcluster1211
                export KUBECONFIG=$HOME/.kube/config
                kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml


          - task: KubernetesManifest@0
            displayName: Deploy Ingress
            inputs:
              action: deploy
              namespace: default
              manifests: |
                $(Pipeline.Workspace)/manifests/ingress.yaml

